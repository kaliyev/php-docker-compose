services:
  #default app with php-fpm
  app:
    build:
      context: .
      dockerfile: app_dockerfile
      args:
        APP_ENV: ${APP_ENV}
        PHP_VERSION: ${PHP_VERSION}
        INSTALL_XDEBUG: ${INSTALL_XDEBUG}
        INSTALL_PHPREDIS: ${INSTALL_PHPREDIS}
        INSTALL_COMPOSER: ${INSTALL_COMPOSER}
        INSTALL_MYSQL: ${INSTALL_MYSQL}
        INSTALL_PGSQL: ${INSTALL_PGSQL}
        INSTALL_ZIP: ${INSTALL_ZIP}
        INSTALL_GD: ${INSTALL_GD}
        INSTALL_INTL: ${INSTALL_INTL}
        NGINX_PHP_UPSTREAM_PORT: ${NGINX_PHP_UPSTREAM_PORT}
        FROM_PHP_INI_DIR: ${FROM_PHP_INI_DIR}
        TO_PHP_INI_DIR: ${TO_PHP_INI_DIR}
    container_name: ${COMPOSE_PROJECT_NAME}_app
    restart: unless-stopped
    environment:
      DB_HOST: ${COMPOSE_PROJECT_NAME}_mysql
      DB_DATABASE: ${MYSQL_DATABASE}
      DB_USERNAME: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      REDIS_HOST: ${COMPOSE_PROJECT_NAME}_redis
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      - ${FROM_PHP_INI_DIR}/php-${PHP_VERSION}-${APP_ENV}.ini:${TO_PHP_INI_DIR}/php.ini
    networks:
      - default

  # app with builded image
  # app:
  #   image: some_image:latest
  #   container_name: ${COMPOSE_PROJECT_NAME}_app
  #   restart: unless-stopped
  #   environment:
  #     DB_HOST: ${COMPOSE_PROJECT_NAME}_mysql
  #     DB_DATABASE: ${MYSQL_DATABASE}
  #     DB_USERNAME: ${MYSQL_USER}
  #     DB_PASSWORD: ${MYSQL_PASSWORD}
  #     REDIS_HOST: ${COMPOSE_PROJECT_NAME}_redis
  #   volumes:
  #     - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
  #     - ${FROM_PHP_INI_DIR}/php-${PHP_VERSION}-${APP_ENV}.ini:${TO_PHP_INI_DIR}/php.ini
  #   networks:
  #     - default

  # Console app example
  # app:
  #   build:
  #     context: .
  #     dockerfile: cli_dockerfile
  #     args:
  #       APP_ENV: ${APP_ENV}
  #       PHP_VERSION: ${PHP_VERSION}
  #       INSTALL_XDEBUG: ${INSTALL_XDEBUG}
  #       INSTALL_PHPREDIS: ${INSTALL_PHPREDIS}
  #       INSTALL_COMPOSER: ${INSTALL_COMPOSER}
  #       INSTALL_MYSQL: ${INSTALL_MYSQL}
  #       INSTALL_PGSQL: ${INSTALL_PGSQL}
  #       INSTALL_ZIP: ${INSTALL_ZIP}
  #       INSTALL_GD: ${INSTALL_GD}
  #       INSTALL_INTL: ${INSTALL_INTL}
  #       FROM_PHP_INI_DIR: ${FROM_PHP_INI_DIR}
  #       TO_PHP_INI_DIR: ${TO_PHP_INI_DIR}
  #   container_name: ${COMPOSE_PROJECT_NAME}_cli
  #   restart: unless-stopped
  #   volumes:
  #     - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
  #     - ${FROM_PHP_INI_DIR}/php-${PHP_VERSION}-${APP_ENV}-cli.ini:${TO_PHP_INI_DIR}/php.ini
  #   networks:
  #     - default

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: ${COMPOSE_PROJECT_NAME}-webserver
    restart: unless-stopped
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      - ./server/nginx/conf.d/:/etc/nginx/conf.d/
    depends_on:
      - app
    networks:
      - default

# MySQL
#  db:
#    image: mysql:${MYSQL_VERSION}
#    container_name: ${COMPOSE_PROJECT_NAME}_mysql
#    restart: unless-stopped
#    tty: true
#    ports:
#      - "${MYSQL_PORT}:${MYSQL_PORT}"
#    environment:
#      MYSQL_DATABASE: ${MYSQL_DATABASE}
#      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
#      MYSQL_USER: ${MYSQL_USER}
#      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
#    volumes:
#      - dbdata:/var/lib/mysql/

# PostgreSQL
#  db:
#    image: postgres:${PGSQL_VERSION}
#    container_name: ${COMPOSE_PROJECT_NAME}_pgsql
#    restart: unless-stopped
#    ports:
#      - "${PGSQL_PORT}:${PGSQL_PORT}"
#    environment:
#      POSTGRES_DB: ${PGSQL_DATABASE}
#      POSTGRES_USER: ${PGSQL_USER}
#      POSTGRES_PASSWORD: ${PGSQL_PASSWORD}
#    volumes:
#      - dbdata:/var/lib/postgresql/

#   redis:
#     image: redis:latest
#     container_name: ${COMPOSE_PROJECT_NAME}_redis
#     volumes:
#       - redisdata:/data
#     ports:
#       - "6379:6379"
#     networks:
#       - default

#Docker Networks
networks:
  default:
    driver: bridge

#Volumes
#volumes:
#  dbdata:
#    driver: local
#  redisdata:
#    driver: local
